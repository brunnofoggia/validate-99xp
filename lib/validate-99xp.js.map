{"version":3,"file":"validate-99xp.js","sources":["../src/validate-99xp.js"],"sourcesContent":["// [validate-99xp](https://github.com/brunnofoggia/validate-99xp) is the automated way\n// to keep your json or model attributes valid. See [v8n-99xp](https://github.com/brunnofoggia/v8n-99xp)\n// and [v8n](https://imbrn.github.io/v8n/) to know more about validators available.\n\n\n// Instructions\n// --------------\n\n// To make a field mandatory set it equal to [] or set your rules instead\n\n//     var validations = { name: [] }\n\n//     var validations = { name: [ [v8n().fullname(), 'Enter your fullname'] ] }\n\n// To make a field not mandatory you can either no list it in your stack of field validations of set it to false\n\n//     var validations = { name: false }\n\n// Advanced topics: \n\n// 1. You can also send a function for validations so you can define your rules according to values received\n\n// 2. On rule array you can send a third value that is called \"getValue\".\n// That will be a function responsible for return a value to be validated for that field \n\n//     var validations = { name: [ [v8n().fullname(), 'Enter your fullname', ()=>{ return 'any other variable'; }] ] }\n\n// 3. If you want to test a value received in realtime from user input set validateAll to false\n\n//     vl.validate({ name: '99xp' }, {validateAll: false})\n\n// 4. Complex objects works well too.\n\n//     var json = {name: '99xp', contacts: [ {email: 'team@99xp.org'} , {email: 'admin@99xp.org'} ]};\n//     var validations = {name: [], 'contacts[][email]': []};\n//     vl.validate(json, {validations})\n\n// Examples\n// --------------\n\n//     - simple validation\n//     var validations = { name: [ [v8n().fullname(), 'Enter your fullname'] ] }\n//     var json = { name: 'bruno' }\n//     var r;\n//     if((r = vl.validate(json, {validations}))!==null) {\n//          console.log(r);\n//     }\n\n//     - making a field just mandatory\n//     var validations = { name: [] }\n//     var json = { name: 'bruno' }\n//     var r;\n//     if((r = vl.validate(json, {validations}))!==null) {\n//          console.log(r);\n//     }\n\n\n// CODE DOCUMENTED BELOW\n// --------------\n\n// --------------\n\n// Baseline setup\n// --------------\nimport v8n from 'v8n-99xp';\nimport _ from 'underscore-99xp';\n\nvar vl = {\n    validator: v8n,\n    deepValueSearch: _.deepValueSearch,\n    validateAll: true,\n    // Core method the walk through fields and their set of rules applying each one of them\n    validate(attrs, options = {}) {\n        options = _.defaults(options, {\n            validateAll: this.validateAll\n        });\n\n        var error = [],\n        validations = this.getValidations(attrs, options),\n            isRequired = {}; \n\n        // walk through fields listed as required\n        for (let field in validations) {\n            isRequired[field] = true;\n            var value = this.deepValueSearch(field, attrs, true);\n\n            // working with array so we can validate lists like \"contacts[][email]\"\n            (\n                (!_.isArray(value) && !_.isJSON(value)) ||\n                (!/\\[\\]\\[\\w+\\]/.test(field) && _.isArray(value)) // ensure to pass the correct value to test length of lists\n            ) && (value = [value]);\n            !_.isArray(validations[field]) && (validations[field] = [validations[field]]);\n\n            // walk through field rule specifications\n            for (let x in validations[field]) {\n                let validation = validations[field][x];\n\n                if (typeof validation[0] === 'boolean' || typeof validation[0] === 'undefined') {\n                    isRequired[field] = !(validation === false);\n                    if (!isRequired[field]) { continue; }\n                    // if is required, set default validation and error message for it\n                    validation = [this.validator().minLength(1), validation[1] || this.getRequiredErrorMessage(field), validation[2] || null];\n                }\n\n                error = error.concat(this.validateValues(value, isRequired[field], options.validateAll, field, attrs, validation));\n            }\n        }\n\n        return error.length > 0 ? error : null;\n    },\n    validateValues(value, isRequired, validateAll, field, attrs, validation) {\n        var error = [];\n        for (var x in value) {\n            error = error.concat(this.validateValue(x, value[x], isRequired, validateAll, field, attrs, validation));\n        }\n\n        return error;\n    },\n    validateValue(x, value, isRequired, validateAll, field, attrs, validation) {\n        var error = [];\n        let validationValue = this.getValidationValue(validation, value, attrs, field);\n        if (this.isRequiredNow(validationValue, isRequired, validateAll) &&\n            !this.isValid(field, attrs, validation[0], validationValue)) {\n            error.push([field, validation[1], x]);\n        }\n\n        return error;\n    },\n    getValidationValue(validation, value, attrs, field) {\n        if (!validation[2] || typeof validation[2] !== 'function') {\n            return value;\n        }\n        return validation[2](value, attrs, field);\n    },\n    getValidations(attrs, options = {}) {\n        var definedValidations = _.result2(this, 'validations', {}, [attrs, options], this),\n            validations = _.result2(options, 'validations', definedValidations, [attrs, options], this);\n\n        return validations;\n    },\n    // Run through all validations to collect mandatory fields and validations\n    getMandatoryValidations(attrs, options = {}) {\n        var validations = this.getValidations(attrs, options), mandatory = {};\n\n        // walk through fields listed as required\n        for (let field in validations) {\n            !_.isArray(validations[field]) && (validations[field] = [validations[field]]);\n            // walk through field rule specifications\n            for (let x in validations[field]) {\n                let validation = validations[field][x];\n                if (typeof validation[0] === 'undefined' || \n                    (typeof validation[0] === 'boolean' && validation[0] !== false) || \n                    (typeof validation[0] === 'object' && !validation[0].test(''))) {\n                    !(field in mandatory) && (mandatory[field] = []);\n                    mandatory[field].push(validation);\n                }\n            }\n        }\n\n        return mandatory;\n    },\n    // A field will be required when its present in the set of rules - even if its value is an empty [] - \n    // AND (its present in the values received OR (its set as required and validate all was set true)) . \n    // A bit confusing I know. But this will allow you to run validate in your form everytime a field is changed avoiding\n    // to alert of invalid fields that yet weren't filled by the guest\n    isRequiredNow(input, fieldRequired = false, validateAll) {\n        // the field will be required only if its value was sent or if its set as required (even without a specific rule)\n        return (typeof input !== 'undefined') || (!!fieldRequired && !!validateAll);\n    },\n    // Apply the rule test to value received. value, attrs inputted and field name are sent to validation method - it can be handy.\n    isValid(field, attrs, validation, value) {\n        if (!validation.test(value)) {\n            return false;\n        }\n        return true;\n    },\n    requiredErrorMessage: 'Field *{{field}}* cannot be empty',\n    getRequiredErrorMessage(field) {\n      return _.template(this.requiredErrorMessage)({\n          field\n        });\n    },\n};\n\nexport default vl;\n"],"names":["vl","validator","v8n","deepValueSearch","_","validateAll","validate","attrs","options","defaults","error","validations","getValidations","isRequired","field","value","isArray","isJSON","test","x","validation","minLength","getRequiredErrorMessage","concat","validateValues","length","validateValue","validationValue","getValidationValue","isRequiredNow","isValid","push","definedValidations","result2","getMandatoryValidations","mandatory","input","fieldRequired","requiredErrorMessage","template"],"mappings":"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"}