/**
* @license
* validate 99xp
* ----------------------------------
* v1.0.0
*
* Copyright (c)2020 Bruno Foggia, 99xp.
* Distributed under MIT license
*
* https://v8n.99xp.org
*/
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("v8n-99xp"),require("underscore-99xp")):"function"==typeof define&&define.amd?define(["exports","v8n-99xp","underscore-99xp"],t):t((e=e||self).vl={},e.v8n,e._)}(this,function(e,t,a){"use strict";var i={validator:t=t&&t.hasOwnProperty("default")?t.default:t,deepValueSearch:(a=a&&a.hasOwnProperty("default")?a.default:a).deepValueSearch,validate(e,t={}){t=a.defaults(t,{validateAll:!0,validations:{}});var i=[],l=a.result2(this,"validations",t.validations,[e,t],this),r={};for(let n in l){r[n]=!0;var d=this.deepValueSearch(n,e);!a.isArray(d)&&(d=[d]);for(let a in l[n]){let s=l[n][a];"boolean"!=typeof s?i=i.concat(this.validateValues(d,r[n],t.validateAll,n,e,s)):r[n]=s}var s=a.isArray(d)?a.first(d):d;l[n].length&&(1!==l[n].length||"boolean"!=typeof l[n][0])||!this.isRequiredNow(s,r[n],t.validateAll)||this.validator().minLength(1).test(s,e,n)||i.push([n,a.template(this.requiredErrorMessage)({field:n})])}return i.length>0?i:null},validateValues(e,t,a,i,l,r){var d=[];for(var s in e)d=d.concat(this.validateValue(s,e[s],t,a,i,l,r));return d},validateValue(e,t,a,i,l,r,d){var s=[];let n=this.getValidationValue(d,t,r,l);return this.isRequiredNow(n,a,i)&&!this.isValid(l,r,d[0],n)&&s.push([l,d[1],e]),s},getValidationValue:(e,t,a,i)=>e[2]&&"function"==typeof e[2]?e[2](t,a,i):t,isRequiredNow:(e,t=!1,a)=>void 0!==e||!!t&&!!a,isValid:(e,t,a,i)=>!!a.test(i),requiredErrorMessage:"Field *{{field}}* cannot be empty"};e.default=i,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=validate-99xp.min.js.map
